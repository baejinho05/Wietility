@page "/prettyjson"

@using Wietility.Module
@inject BlazorJsModule BlazorJsModule
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using System.Timers
@inject NavigationManager NavManager
@using Microsoft.AspNetCore.WebUtilities


<h1>PrettyJson!</h1>

<h3>Before</h3>
<textarea class="w-100 form-control rounded-0" style="height:300px" @onkeyup="@HandleKeyUp" @bind="BeforeJson" @bind:event="oninput"></textarea>

<p>@Msg</p>

<h3>After</h3>
<textarea class="w-100 form-control rounded-0" style="height:300px" @bind="AfterJson" readonly></textarea>



@code {

    private string BeforeJson { get; set; }

    private string AfterJson { get; set; }

    private string Msg { get; set; }

    private System.Timers.Timer aTimer;

    protected override void OnInitialized()
    {
        aTimer = new System.Timers.Timer(500);
        aTimer.Elapsed += OnUserFinish;
        aTimer.AutoReset = false;


        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        var queryStrings = QueryHelpers.ParseQuery(uri.Query);
        if (queryStrings.TryGetValue("value", out var value))
        {
            BeforeJson = value;
            HandleKeyUp(new KeyboardEventArgs());
        }
    }

    void HandleKeyUp(KeyboardEventArgs e)
    {

        aTimer.Stop();
        aTimer.Start();
    }

    private void OnUserFinish(Object source, ElapsedEventArgs e)
    {
        InvokeAsync(() =>
        {
            Msg = string.Empty;
            try
            {
                var jObj = JsonConvert.DeserializeObject(BeforeJson);
                //var jObj = JObject.Parse(BeforeJson);
                AfterJson = jObj.ToString();
            }
            catch (Exception)
            {
                Msg = "올바른 JSON을 넣어주세요";
            }
            StateHasChanged();
        });
    }

}
